---

- name: Installer restic, lftp
  package: name=restic,lftp

- name: Backup encrypt file exists?
  register: stat_backup_password
  stat:
    path: '{{ home }}/.restic_password'

- name: Installer le backup password
  when: not stat_backup_password.stat.exists
  copy:
    content: "{{ lookup('password', '/dev/null length=15') }}"
    dest: '{{ home }}/.restic_password'
    mode: '0400'

- name: Initialiser le repo de backup
  register: restic_init
  changed_when: "'created restic repo' in restic_init['stdout']"
  shell: |
    export RESTIC_PASSWORD_FILE={{ home }}/.restic_password
    export RESTIC_REPOSITORY={{ lookup('env', 'RESTIC_REPOSITORY') or home + '/restic' }}
    test -d $RESTIC_REPOSITORY || restic init

- register: stat_backup
  stat:
    path: '{{ home }}/backup.sh'

- name: Executer le script de backup
  when: stat_backup.stat.exists
  shell: '{{ home }}/backup.sh'

- name: Installer le script de backup
  template:
    src: backup.sh
    dest: '{{ home }}/backup.sh'
    mode: 0700

- name: Installer le script de politique de retention
  template:
    src: prune.sh
    dest: '{{ home }}/prune.sh'
    mode: 0700

- name: Installer le script de restoration de backup
  template:
    src: restore.sh
    dest: '{{ home }}/restore.sh'
    mode: 0700

- name: Installer le cron de backup
  include_role: name=yourlabs.timer
  vars:
    name: 'backup-{{ home.split("/")[-1] }}'
    cmd: '{{ home }}/backup.sh'
    chdir: '{{ home }}'
    oncalendar: '*-*-* 23:00:00'
    backup_notify: '{{ backup_notify }}'
    env:
      BACKUP_FORCE: 1

- name: Installation du script de notification
  when: backup_notify != 'none'
  vars:
    SMTP_ADDR: '{{ lookup("env", "SMTP_ADDR") }}'
    SENDER_EMAIL: '{{ lookup("env", "SENDER_EMAIL") }}'
    SENDER_PASS: '{{ lookup("env", "SENDER_PASS") }}'
    REC_EMAIL: '{{ lookup("env", "REC_EMAIL") }}'
    MATTERMOST_TOKEN: '{{ lookup("env", "MATTERMOST_TOKEN") }}'
    CHANNEL_ID: '{{ lookup("env", "CHANNEL_ID") }}'
    MATTERMOST_USER_ID: '{{ lookup("env", "MATTERMOST_USER_ID") }}'
    SLACK_WEBHOOK: '{{ lookup("env", "SLACK_WEBHOOK") }}'
  template:
    src: notify.sh
    dest: '{{ home }}/notify.sh'
    owner: root
    mode: '0700'
